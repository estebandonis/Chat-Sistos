// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.proto
// Protobuf C++ Version: 5.26.1

#include "chat.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace chat {

inline constexpr UserListRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserListRequest::UserListRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserListRequestDefaultTypeInternal() {}
  union {
    UserListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserListRequestDefaultTypeInternal _UserListRequest_default_instance_;

inline constexpr User::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{static_cast< ::chat::UserStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR User::User(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserDefaultTypeInternal() {}
  union {
    User _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserDefaultTypeInternal _User_default_instance_;

inline constexpr UpdateStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_status_{static_cast< ::chat::UserStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateStatusRequest::UpdateStatusRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateStatusRequestDefaultTypeInternal() {}
  union {
    UpdateStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateStatusRequestDefaultTypeInternal _UpdateStatusRequest_default_instance_;

inline constexpr SendMessageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : recipient_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SendMessageRequest::SendMessageRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SendMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMessageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMessageRequestDefaultTypeInternal() {}
  union {
    SendMessageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMessageRequestDefaultTypeInternal _SendMessageRequest_default_instance_;

inline constexpr NewUserRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NewUserRequest::NewUserRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NewUserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewUserRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewUserRequestDefaultTypeInternal() {}
  union {
    NewUserRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewUserRequestDefaultTypeInternal _NewUserRequest_default_instance_;

inline constexpr IncomingMessageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::chat::MessageType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IncomingMessageResponse::IncomingMessageResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IncomingMessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IncomingMessageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IncomingMessageResponseDefaultTypeInternal() {}
  union {
    IncomingMessageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IncomingMessageResponseDefaultTypeInternal _IncomingMessageResponse_default_instance_;

inline constexpr UserListResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : users_{},
        type_{static_cast< ::chat::UserListType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserListResponse::UserListResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserListResponseDefaultTypeInternal() {}
  union {
    UserListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserListResponseDefaultTypeInternal _UserListResponse_default_instance_;

inline constexpr Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : operation_{static_cast< ::chat::Operation >(0)},
        payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Request::Request(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestDefaultTypeInternal() {}
  union {
    Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestDefaultTypeInternal _Request_default_instance_;

inline constexpr Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        operation_{static_cast< ::chat::Operation >(0)},
        status_code_{static_cast< ::chat::StatusCode >(0)},
        result_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Response::Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseDefaultTypeInternal() {}
  union {
    Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseDefaultTypeInternal _Response_default_instance_;
}  // namespace chat
static ::_pb::Metadata file_level_metadata_chat_2eproto[9];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_chat_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_chat_2eproto = nullptr;
const ::uint32_t
    TableStruct_chat_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::User, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::User, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::chat::User, _impl_.status_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::NewUserRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::NewUserRequest, _impl_.username_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::SendMessageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::SendMessageRequest, _impl_.recipient_),
        PROTOBUF_FIELD_OFFSET(::chat::SendMessageRequest, _impl_.content_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::IncomingMessageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::IncomingMessageResponse, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::chat::IncomingMessageResponse, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::chat::IncomingMessageResponse, _impl_.type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::UserListRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::UserListRequest, _impl_.username_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::UserListResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::UserListResponse, _impl_.users_),
        PROTOBUF_FIELD_OFFSET(::chat::UserListResponse, _impl_.type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::UpdateStatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::UpdateStatusRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::chat::UpdateStatusRequest, _impl_.new_status_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::Request, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::chat::Request, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::Request, _impl_.operation_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::chat::Request, _impl_.payload_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chat::Response, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::chat::Response, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chat::Response, _impl_.operation_),
        PROTOBUF_FIELD_OFFSET(::chat::Response, _impl_.status_code_),
        PROTOBUF_FIELD_OFFSET(::chat::Response, _impl_.message_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::chat::Response, _impl_.result_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::chat::User)},
        {10, -1, -1, sizeof(::chat::NewUserRequest)},
        {19, -1, -1, sizeof(::chat::SendMessageRequest)},
        {29, -1, -1, sizeof(::chat::IncomingMessageResponse)},
        {40, -1, -1, sizeof(::chat::UserListRequest)},
        {49, -1, -1, sizeof(::chat::UserListResponse)},
        {59, -1, -1, sizeof(::chat::UpdateStatusRequest)},
        {69, -1, -1, sizeof(::chat::Request)},
        {84, -1, -1, sizeof(::chat::Response)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::chat::_User_default_instance_._instance,
    &::chat::_NewUserRequest_default_instance_._instance,
    &::chat::_SendMessageRequest_default_instance_._instance,
    &::chat::_IncomingMessageResponse_default_instance_._instance,
    &::chat::_UserListRequest_default_instance_._instance,
    &::chat::_UserListResponse_default_instance_._instance,
    &::chat::_UpdateStatusRequest_default_instance_._instance,
    &::chat::_Request_default_instance_._instance,
    &::chat::_Response_default_instance_._instance,
};
const char descriptor_table_protodef_chat_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nchat.proto\022\004chat\":\n\004User\022\020\n\010username\030\001"
    " \001(\t\022 \n\006status\030\002 \001(\0162\020.chat.UserStatus\"\""
    "\n\016NewUserRequest\022\020\n\010username\030\001 \001(\t\"8\n\022Se"
    "ndMessageRequest\022\021\n\trecipient\030\001 \001(\t\022\017\n\007c"
    "ontent\030\002 \001(\t\"[\n\027IncomingMessageResponse\022"
    "\016\n\006sender\030\001 \001(\t\022\017\n\007content\030\002 \001(\t\022\037\n\004type"
    "\030\003 \001(\0162\021.chat.MessageType\"#\n\017UserListReq"
    "uest\022\020\n\010username\030\001 \001(\t\"O\n\020UserListRespon"
    "se\022\031\n\005users\030\001 \003(\0132\n.chat.User\022 \n\004type\030\002 "
    "\001(\0162\022.chat.UserListType\"M\n\023UpdateStatusR"
    "equest\022\020\n\010username\030\001 \001(\t\022$\n\nnew_status\030\002"
    " \001(\0162\020.chat.UserStatus\"\240\002\n\007Request\022\"\n\top"
    "eration\030\001 \001(\0162\017.chat.Operation\022-\n\rregist"
    "er_user\030\002 \001(\0132\024.chat.NewUserRequestH\000\0220\n"
    "\014send_message\030\003 \001(\0132\030.chat.SendMessageRe"
    "questH\000\0222\n\rupdate_status\030\004 \001(\0132\031.chat.Up"
    "dateStatusRequestH\000\022*\n\tget_users\030\005 \001(\0132\025"
    ".chat.UserListRequestH\000\022%\n\017unregister_us"
    "er\030\006 \001(\0132\n.chat.UserH\000B\t\n\007payload\"\330\001\n\010Re"
    "sponse\022\"\n\toperation\030\001 \001(\0162\017.chat.Operati"
    "on\022%\n\013status_code\030\002 \001(\0162\020.chat.StatusCod"
    "e\022\017\n\007message\030\003 \001(\t\022+\n\tuser_list\030\004 \001(\0132\026."
    "chat.UserListResponseH\000\0229\n\020incoming_mess"
    "age\030\005 \001(\0132\035.chat.IncomingMessageResponse"
    "H\000B\010\n\006result*/\n\nUserStatus\022\n\n\006ONLINE\020\000\022\010"
    "\n\004BUSY\020\001\022\013\n\007OFFLINE\020\002*(\n\013MessageType\022\r\n\t"
    "BROADCAST\020\000\022\n\n\006DIRECT\020\001*#\n\014UserListType\022"
    "\007\n\003ALL\020\000\022\n\n\006SINGLE\020\001*}\n\tOperation\022\021\n\rREG"
    "ISTER_USER\020\000\022\020\n\014SEND_MESSAGE\020\001\022\021\n\rUPDATE"
    "_STATUS\020\002\022\r\n\tGET_USERS\020\003\022\023\n\017UNREGISTER_U"
    "SER\020\004\022\024\n\020INCOMING_MESSAGE\020\005*W\n\nStatusCod"
    "e\022\022\n\016UNKNOWN_STATUS\020\000\022\007\n\002OK\020\310\001\022\020\n\013BAD_RE"
    "QUEST\020\220\003\022\032\n\025INTERNAL_SERVER_ERROR\020\364\003b\006pr"
    "oto3"
};
static ::absl::once_flag descriptor_table_chat_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_chat_2eproto = {
    false,
    false,
    1324,
    descriptor_table_protodef_chat_2eproto,
    "chat.proto",
    &descriptor_table_chat_2eproto_once,
    nullptr,
    0,
    9,
    schemas,
    file_default_instances,
    TableStruct_chat_2eproto::offsets,
    file_level_metadata_chat_2eproto,
    file_level_enum_descriptors_chat_2eproto,
    file_level_service_descriptors_chat_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_chat_2eproto_getter() {
  return &descriptor_table_chat_2eproto;
}
namespace chat {
const ::google::protobuf::EnumDescriptor* UserStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_chat_2eproto);
  return file_level_enum_descriptors_chat_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t UserStatus_internal_data_[] = {
    196608u, 0u, };
bool UserStatus_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_chat_2eproto);
  return file_level_enum_descriptors_chat_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t MessageType_internal_data_[] = {
    131072u, 0u, };
bool MessageType_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* UserListType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_chat_2eproto);
  return file_level_enum_descriptors_chat_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t UserListType_internal_data_[] = {
    131072u, 0u, };
bool UserListType_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* Operation_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_chat_2eproto);
  return file_level_enum_descriptors_chat_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t Operation_internal_data_[] = {
    393216u, 0u, };
bool Operation_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* StatusCode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_chat_2eproto);
  return file_level_enum_descriptors_chat_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t StatusCode_internal_data_[] = {
    65536u, 196608u, 400u, 200u, 500u, };
bool StatusCode_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, StatusCode_internal_data_);
}
// ===================================================================

class User::_Internal {
 public:
};

User::User(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.User)
}
inline PROTOBUF_NDEBUG_INLINE User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : username_(arena, from.username_),
        _cached_size_{0} {}

User::User(
    ::google::protobuf::Arena* arena,
    const User& from)
    : ::google::protobuf::Message(arena) {
  User* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.status_ = from._impl_.status_;

  // @@protoc_insertion_point(copy_constructor:chat.User)
}
inline PROTOBUF_NDEBUG_INLINE User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        _cached_size_{0} {}

inline void User::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
User::~User() {
  // @@protoc_insertion_point(destructor:chat.User)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void User::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
User::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(User, _impl_._cached_size_),
              false,
          },
          &User::MergeImpl,
          &User::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void User::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.User)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* User::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 26, 2> User::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_User_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::User>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .chat.UserStatus status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(User, _impl_.status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.status_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .chat.UserStatus status = 2;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\11\10\0\0\0\0\0\0"
    "chat.User"
    "username"
  }},
};

::uint8_t* User::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.User)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.User.username");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .chat.UserStatus status = 2;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.User)
  return target;
}

::size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.User)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // .chat.UserStatus status = 2;
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void User::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<User*>(&to_msg);
  auto& from = static_cast<const User&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.User)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool User::IsInitialized() const {
  return true;
}

void User::InternalSwap(User* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_chat_2eproto_getter,
                                   &descriptor_table_chat_2eproto_once,
                                   file_level_metadata_chat_2eproto[0]);
}
// ===================================================================

class NewUserRequest::_Internal {
 public:
};

NewUserRequest::NewUserRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.NewUserRequest)
}
inline PROTOBUF_NDEBUG_INLINE NewUserRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : username_(arena, from.username_),
        _cached_size_{0} {}

NewUserRequest::NewUserRequest(
    ::google::protobuf::Arena* arena,
    const NewUserRequest& from)
    : ::google::protobuf::Message(arena) {
  NewUserRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:chat.NewUserRequest)
}
inline PROTOBUF_NDEBUG_INLINE NewUserRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        _cached_size_{0} {}

inline void NewUserRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NewUserRequest::~NewUserRequest() {
  // @@protoc_insertion_point(destructor:chat.NewUserRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NewUserRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NewUserRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NewUserRequest, _impl_._cached_size_),
              false,
          },
          &NewUserRequest::MergeImpl,
          &NewUserRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NewUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.NewUserRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NewUserRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 36, 2> NewUserRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NewUserRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::NewUserRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NewUserRequest, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(NewUserRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\10\0\0\0\0\0\0"
    "chat.NewUserRequest"
    "username"
  }},
};

::uint8_t* NewUserRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.NewUserRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.NewUserRequest.username");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.NewUserRequest)
  return target;
}

::size_t NewUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.NewUserRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NewUserRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NewUserRequest*>(&to_msg);
  auto& from = static_cast<const NewUserRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.NewUserRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NewUserRequest::CopyFrom(const NewUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.NewUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NewUserRequest::IsInitialized() const {
  return true;
}

void NewUserRequest::InternalSwap(NewUserRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
}

::google::protobuf::Metadata NewUserRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_chat_2eproto_getter,
                                   &descriptor_table_chat_2eproto_once,
                                   file_level_metadata_chat_2eproto[1]);
}
// ===================================================================

class SendMessageRequest::_Internal {
 public:
};

SendMessageRequest::SendMessageRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.SendMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE SendMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : recipient_(arena, from.recipient_),
        content_(arena, from.content_),
        _cached_size_{0} {}

SendMessageRequest::SendMessageRequest(
    ::google::protobuf::Arena* arena,
    const SendMessageRequest& from)
    : ::google::protobuf::Message(arena) {
  SendMessageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:chat.SendMessageRequest)
}
inline PROTOBUF_NDEBUG_INLINE SendMessageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : recipient_(arena),
        content_(arena),
        _cached_size_{0} {}

inline void SendMessageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SendMessageRequest::~SendMessageRequest() {
  // @@protoc_insertion_point(destructor:chat.SendMessageRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SendMessageRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.recipient_.Destroy();
  _impl_.content_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SendMessageRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_._cached_size_),
              false,
          },
          &SendMessageRequest::MergeImpl,
          &SendMessageRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void SendMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.SendMessageRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.recipient_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SendMessageRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 48, 2> SendMessageRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SendMessageRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::SendMessageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string content = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_.content_)}},
    // string recipient = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_.recipient_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string recipient = 1;
    {PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_.recipient_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string content = 2;
    {PROTOBUF_FIELD_OFFSET(SendMessageRequest, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\11\7\0\0\0\0\0"
    "chat.SendMessageRequest"
    "recipient"
    "content"
  }},
};

::uint8_t* SendMessageRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.SendMessageRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string recipient = 1;
  if (!this->_internal_recipient().empty()) {
    const std::string& _s = this->_internal_recipient();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.SendMessageRequest.recipient");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.SendMessageRequest.content");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.SendMessageRequest)
  return target;
}

::size_t SendMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.SendMessageRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string recipient = 1;
  if (!this->_internal_recipient().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_recipient());
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_content());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SendMessageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SendMessageRequest*>(&to_msg);
  auto& from = static_cast<const SendMessageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.SendMessageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_recipient().empty()) {
    _this->_internal_set_recipient(from._internal_recipient());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SendMessageRequest::CopyFrom(const SendMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.SendMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SendMessageRequest::IsInitialized() const {
  return true;
}

void SendMessageRequest::InternalSwap(SendMessageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recipient_, &other->_impl_.recipient_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
}

::google::protobuf::Metadata SendMessageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_chat_2eproto_getter,
                                   &descriptor_table_chat_2eproto_once,
                                   file_level_metadata_chat_2eproto[2]);
}
// ===================================================================

class IncomingMessageResponse::_Internal {
 public:
};

IncomingMessageResponse::IncomingMessageResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.IncomingMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE IncomingMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : sender_(arena, from.sender_),
        content_(arena, from.content_),
        _cached_size_{0} {}

IncomingMessageResponse::IncomingMessageResponse(
    ::google::protobuf::Arena* arena,
    const IncomingMessageResponse& from)
    : ::google::protobuf::Message(arena) {
  IncomingMessageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:chat.IncomingMessageResponse)
}
inline PROTOBUF_NDEBUG_INLINE IncomingMessageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sender_(arena),
        content_(arena),
        _cached_size_{0} {}

inline void IncomingMessageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
IncomingMessageResponse::~IncomingMessageResponse() {
  // @@protoc_insertion_point(destructor:chat.IncomingMessageResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IncomingMessageResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sender_.Destroy();
  _impl_.content_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
IncomingMessageResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(IncomingMessageResponse, _impl_._cached_size_),
              false,
          },
          &IncomingMessageResponse::MergeImpl,
          &IncomingMessageResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void IncomingMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.IncomingMessageResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sender_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IncomingMessageResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 50, 2> IncomingMessageResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_IncomingMessageResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::IncomingMessageResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string sender = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(IncomingMessageResponse, _impl_.sender_)}},
    // string content = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(IncomingMessageResponse, _impl_.content_)}},
    // .chat.MessageType type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IncomingMessageResponse, _impl_.type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(IncomingMessageResponse, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string sender = 1;
    {PROTOBUF_FIELD_OFFSET(IncomingMessageResponse, _impl_.sender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string content = 2;
    {PROTOBUF_FIELD_OFFSET(IncomingMessageResponse, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .chat.MessageType type = 3;
    {PROTOBUF_FIELD_OFFSET(IncomingMessageResponse, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\34\6\7\0\0\0\0\0"
    "chat.IncomingMessageResponse"
    "sender"
    "content"
  }},
};

::uint8_t* IncomingMessageResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.IncomingMessageResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string sender = 1;
  if (!this->_internal_sender().empty()) {
    const std::string& _s = this->_internal_sender();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.IncomingMessageResponse.sender");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.IncomingMessageResponse.content");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .chat.MessageType type = 3;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.IncomingMessageResponse)
  return target;
}

::size_t IncomingMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.IncomingMessageResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender = 1;
  if (!this->_internal_sender().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sender());
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_content());
  }

  // .chat.MessageType type = 3;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void IncomingMessageResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IncomingMessageResponse*>(&to_msg);
  auto& from = static_cast<const IncomingMessageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.IncomingMessageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IncomingMessageResponse::CopyFrom(const IncomingMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.IncomingMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IncomingMessageResponse::IsInitialized() const {
  return true;
}

void IncomingMessageResponse::InternalSwap(IncomingMessageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata IncomingMessageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_chat_2eproto_getter,
                                   &descriptor_table_chat_2eproto_once,
                                   file_level_metadata_chat_2eproto[3]);
}
// ===================================================================

class UserListRequest::_Internal {
 public:
};

UserListRequest::UserListRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.UserListRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : username_(arena, from.username_),
        _cached_size_{0} {}

UserListRequest::UserListRequest(
    ::google::protobuf::Arena* arena,
    const UserListRequest& from)
    : ::google::protobuf::Message(arena) {
  UserListRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:chat.UserListRequest)
}
inline PROTOBUF_NDEBUG_INLINE UserListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        _cached_size_{0} {}

inline void UserListRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserListRequest::~UserListRequest() {
  // @@protoc_insertion_point(destructor:chat.UserListRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserListRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UserListRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UserListRequest, _impl_._cached_size_),
              false,
          },
          &UserListRequest::MergeImpl,
          &UserListRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UserListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.UserListRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserListRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 37, 2> UserListRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserListRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::UserListRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserListRequest, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(UserListRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\10\0\0\0\0\0\0"
    "chat.UserListRequest"
    "username"
  }},
};

::uint8_t* UserListRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.UserListRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.UserListRequest.username");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.UserListRequest)
  return target;
}

::size_t UserListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.UserListRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UserListRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserListRequest*>(&to_msg);
  auto& from = static_cast<const UserListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.UserListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserListRequest::CopyFrom(const UserListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.UserListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserListRequest::IsInitialized() const {
  return true;
}

void UserListRequest::InternalSwap(UserListRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
}

::google::protobuf::Metadata UserListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_chat_2eproto_getter,
                                   &descriptor_table_chat_2eproto_once,
                                   file_level_metadata_chat_2eproto[4]);
}
// ===================================================================

class UserListResponse::_Internal {
 public:
};

UserListResponse::UserListResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.UserListResponse)
}
inline PROTOBUF_NDEBUG_INLINE UserListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : users_{visibility, arena, from.users_},
        _cached_size_{0} {}

UserListResponse::UserListResponse(
    ::google::protobuf::Arena* arena,
    const UserListResponse& from)
    : ::google::protobuf::Message(arena) {
  UserListResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:chat.UserListResponse)
}
inline PROTOBUF_NDEBUG_INLINE UserListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : users_{visibility, arena},
        _cached_size_{0} {}

inline void UserListResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
UserListResponse::~UserListResponse() {
  // @@protoc_insertion_point(destructor:chat.UserListResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserListResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UserListResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UserListResponse, _impl_._cached_size_),
              false,
          },
          &UserListResponse::MergeImpl,
          &UserListResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UserListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.UserListResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.users_.Clear();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserListResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> UserListResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UserListResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::UserListResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .chat.UserListType type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserListResponse, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UserListResponse, _impl_.type_)}},
    // repeated .chat.User users = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserListResponse, _impl_.users_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .chat.User users = 1;
    {PROTOBUF_FIELD_OFFSET(UserListResponse, _impl_.users_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .chat.UserListType type = 2;
    {PROTOBUF_FIELD_OFFSET(UserListResponse, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chat::User>()},
  }}, {{
  }},
};

::uint8_t* UserListResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.UserListResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .chat.User users = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_users_size());
       i < n; i++) {
    const auto& repfield = this->_internal_users().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .chat.UserListType type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.UserListResponse)
  return target;
}

::size_t UserListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.UserListResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .chat.User users = 1;
  total_size += 1UL * this->_internal_users_size();
  for (const auto& msg : this->_internal_users()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .chat.UserListType type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UserListResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserListResponse*>(&to_msg);
  auto& from = static_cast<const UserListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.UserListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_users()->MergeFrom(
      from._internal_users());
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserListResponse::CopyFrom(const UserListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.UserListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserListResponse::IsInitialized() const {
  return true;
}

void UserListResponse::InternalSwap(UserListResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.users_.InternalSwap(&other->_impl_.users_);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata UserListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_chat_2eproto_getter,
                                   &descriptor_table_chat_2eproto_once,
                                   file_level_metadata_chat_2eproto[5]);
}
// ===================================================================

class UpdateStatusRequest::_Internal {
 public:
};

UpdateStatusRequest::UpdateStatusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.UpdateStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : username_(arena, from.username_),
        _cached_size_{0} {}

UpdateStatusRequest::UpdateStatusRequest(
    ::google::protobuf::Arena* arena,
    const UpdateStatusRequest& from)
    : ::google::protobuf::Message(arena) {
  UpdateStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.new_status_ = from._impl_.new_status_;

  // @@protoc_insertion_point(copy_constructor:chat.UpdateStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        _cached_size_{0} {}

inline void UpdateStatusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.new_status_ = {};
}
UpdateStatusRequest::~UpdateStatusRequest() {
  // @@protoc_insertion_point(destructor:chat.UpdateStatusRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateStatusRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UpdateStatusRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_._cached_size_),
              false,
          },
          &UpdateStatusRequest::MergeImpl,
          &UpdateStatusRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UpdateStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.UpdateStatusRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.new_status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateStatusRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 41, 2> UpdateStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UpdateStatusRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::UpdateStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .chat.UserStatus new_status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateStatusRequest, _impl_.new_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.new_status_)}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .chat.UserStatus new_status = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateStatusRequest, _impl_.new_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\30\10\0\0\0\0\0\0"
    "chat.UpdateStatusRequest"
    "username"
  }},
};

::uint8_t* UpdateStatusRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.UpdateStatusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.UpdateStatusRequest.username");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .chat.UserStatus new_status = 2;
  if (this->_internal_new_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_new_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.UpdateStatusRequest)
  return target;
}

::size_t UpdateStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.UpdateStatusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // .chat.UserStatus new_status = 2;
  if (this->_internal_new_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_new_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UpdateStatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateStatusRequest*>(&to_msg);
  auto& from = static_cast<const UpdateStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.UpdateStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (from._internal_new_status() != 0) {
    _this->_impl_.new_status_ = from._impl_.new_status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateStatusRequest::CopyFrom(const UpdateStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.UpdateStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateStatusRequest::IsInitialized() const {
  return true;
}

void UpdateStatusRequest::InternalSwap(UpdateStatusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  swap(_impl_.new_status_, other->_impl_.new_status_);
}

::google::protobuf::Metadata UpdateStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_chat_2eproto_getter,
                                   &descriptor_table_chat_2eproto_once,
                                   file_level_metadata_chat_2eproto[6]);
}
// ===================================================================

class Request::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::chat::Request, _impl_._oneof_case_);
};

void Request::set_allocated_register_user(::chat::NewUserRequest* register_user) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (register_user) {
    ::google::protobuf::Arena* submessage_arena = register_user->GetArena();
    if (message_arena != submessage_arena) {
      register_user = ::google::protobuf::internal::GetOwnedMessage(message_arena, register_user, submessage_arena);
    }
    set_has_register_user();
    _impl_.payload_.register_user_ = register_user;
  }
  // @@protoc_insertion_point(field_set_allocated:chat.Request.register_user)
}
void Request::set_allocated_send_message(::chat::SendMessageRequest* send_message) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (send_message) {
    ::google::protobuf::Arena* submessage_arena = send_message->GetArena();
    if (message_arena != submessage_arena) {
      send_message = ::google::protobuf::internal::GetOwnedMessage(message_arena, send_message, submessage_arena);
    }
    set_has_send_message();
    _impl_.payload_.send_message_ = send_message;
  }
  // @@protoc_insertion_point(field_set_allocated:chat.Request.send_message)
}
void Request::set_allocated_update_status(::chat::UpdateStatusRequest* update_status) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (update_status) {
    ::google::protobuf::Arena* submessage_arena = update_status->GetArena();
    if (message_arena != submessage_arena) {
      update_status = ::google::protobuf::internal::GetOwnedMessage(message_arena, update_status, submessage_arena);
    }
    set_has_update_status();
    _impl_.payload_.update_status_ = update_status;
  }
  // @@protoc_insertion_point(field_set_allocated:chat.Request.update_status)
}
void Request::set_allocated_get_users(::chat::UserListRequest* get_users) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (get_users) {
    ::google::protobuf::Arena* submessage_arena = get_users->GetArena();
    if (message_arena != submessage_arena) {
      get_users = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_users, submessage_arena);
    }
    set_has_get_users();
    _impl_.payload_.get_users_ = get_users;
  }
  // @@protoc_insertion_point(field_set_allocated:chat.Request.get_users)
}
void Request::set_allocated_unregister_user(::chat::User* unregister_user) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (unregister_user) {
    ::google::protobuf::Arena* submessage_arena = unregister_user->GetArena();
    if (message_arena != submessage_arena) {
      unregister_user = ::google::protobuf::internal::GetOwnedMessage(message_arena, unregister_user, submessage_arena);
    }
    set_has_unregister_user();
    _impl_.payload_.unregister_user_ = unregister_user;
  }
  // @@protoc_insertion_point(field_set_allocated:chat.Request.unregister_user)
}
Request::Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.Request)
}
inline PROTOBUF_NDEBUG_INLINE Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Request::Request(
    ::google::protobuf::Arena* arena,
    const Request& from)
    : ::google::protobuf::Message(arena) {
  Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.operation_ = from._impl_.operation_;
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kRegisterUser:
        _impl_.payload_.register_user_ = ::google::protobuf::Message::CopyConstruct<::chat::NewUserRequest>(arena, *from._impl_.payload_.register_user_);
        break;
      case kSendMessage:
        _impl_.payload_.send_message_ = ::google::protobuf::Message::CopyConstruct<::chat::SendMessageRequest>(arena, *from._impl_.payload_.send_message_);
        break;
      case kUpdateStatus:
        _impl_.payload_.update_status_ = ::google::protobuf::Message::CopyConstruct<::chat::UpdateStatusRequest>(arena, *from._impl_.payload_.update_status_);
        break;
      case kGetUsers:
        _impl_.payload_.get_users_ = ::google::protobuf::Message::CopyConstruct<::chat::UserListRequest>(arena, *from._impl_.payload_.get_users_);
        break;
      case kUnregisterUser:
        _impl_.payload_.unregister_user_ = ::google::protobuf::Message::CopyConstruct<::chat::User>(arena, *from._impl_.payload_.unregister_user_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:chat.Request)
}
inline PROTOBUF_NDEBUG_INLINE Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.operation_ = {};
}
Request::~Request() {
  // @@protoc_insertion_point(destructor:chat.Request)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Request::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
  _impl_.~Impl_();
}

void Request::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:chat.Request)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (payload_case()) {
    case kRegisterUser: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.register_user_;
      }
      break;
    }
    case kSendMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.send_message_;
      }
      break;
    }
    case kUpdateStatus: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.update_status_;
      }
      break;
    }
    case kGetUsers: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.get_users_;
      }
      break;
    }
    case kUnregisterUser: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.unregister_user_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
Request::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Request, _impl_._cached_size_),
              false,
          },
          &Request::MergeImpl,
          &Request::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.Request)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.operation_ = 0;
  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 6, 5, 0, 2> Request::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::Request>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .chat.Operation operation = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Request, _impl_.operation_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Request, _impl_.operation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .chat.Operation operation = 1;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.operation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .chat.NewUserRequest register_user = 2;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.payload_.register_user_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .chat.SendMessageRequest send_message = 3;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.payload_.send_message_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .chat.UpdateStatusRequest update_status = 4;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.payload_.update_status_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .chat.UserListRequest get_users = 5;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.payload_.get_users_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .chat.User unregister_user = 6;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.payload_.unregister_user_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chat::NewUserRequest>()},
    {::_pbi::TcParser::GetTable<::chat::SendMessageRequest>()},
    {::_pbi::TcParser::GetTable<::chat::UpdateStatusRequest>()},
    {::_pbi::TcParser::GetTable<::chat::UserListRequest>()},
    {::_pbi::TcParser::GetTable<::chat::User>()},
  }}, {{
  }},
};

::uint8_t* Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .chat.Operation operation = 1;
  if (this->_internal_operation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_operation(), target);
  }

  switch (payload_case()) {
    case kRegisterUser: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.payload_.register_user_, _impl_.payload_.register_user_->GetCachedSize(), target, stream);
      break;
    }
    case kSendMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.payload_.send_message_, _impl_.payload_.send_message_->GetCachedSize(), target, stream);
      break;
    }
    case kUpdateStatus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *_impl_.payload_.update_status_, _impl_.payload_.update_status_->GetCachedSize(), target, stream);
      break;
    }
    case kGetUsers: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *_impl_.payload_.get_users_, _impl_.payload_.get_users_->GetCachedSize(), target, stream);
      break;
    }
    case kUnregisterUser: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *_impl_.payload_.unregister_user_, _impl_.payload_.unregister_user_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.Request)
  return target;
}

::size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .chat.Operation operation = 1;
  if (this->_internal_operation() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_operation());
  }

  switch (payload_case()) {
    // .chat.NewUserRequest register_user = 2;
    case kRegisterUser: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.register_user_);
      break;
    }
    // .chat.SendMessageRequest send_message = 3;
    case kSendMessage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.send_message_);
      break;
    }
    // .chat.UpdateStatusRequest update_status = 4;
    case kUpdateStatus: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.update_status_);
      break;
    }
    // .chat.UserListRequest get_users = 5;
    case kGetUsers: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.get_users_);
      break;
    }
    // .chat.User unregister_user = 6;
    case kUnregisterUser: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.unregister_user_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Request::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Request*>(&to_msg);
  auto& from = static_cast<const Request&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_operation() != 0) {
    _this->_impl_.operation_ = from._impl_.operation_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kRegisterUser: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.register_user_ =
              ::google::protobuf::Message::CopyConstruct<::chat::NewUserRequest>(arena, *from._impl_.payload_.register_user_);
        } else {
          _this->_impl_.payload_.register_user_->MergeFrom(from._internal_register_user());
        }
        break;
      }
      case kSendMessage: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.send_message_ =
              ::google::protobuf::Message::CopyConstruct<::chat::SendMessageRequest>(arena, *from._impl_.payload_.send_message_);
        } else {
          _this->_impl_.payload_.send_message_->MergeFrom(from._internal_send_message());
        }
        break;
      }
      case kUpdateStatus: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.update_status_ =
              ::google::protobuf::Message::CopyConstruct<::chat::UpdateStatusRequest>(arena, *from._impl_.payload_.update_status_);
        } else {
          _this->_impl_.payload_.update_status_->MergeFrom(from._internal_update_status());
        }
        break;
      }
      case kGetUsers: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.get_users_ =
              ::google::protobuf::Message::CopyConstruct<::chat::UserListRequest>(arena, *from._impl_.payload_.get_users_);
        } else {
          _this->_impl_.payload_.get_users_->MergeFrom(from._internal_get_users());
        }
        break;
      }
      case kUnregisterUser: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.unregister_user_ =
              ::google::protobuf::Message::CopyConstruct<::chat::User>(arena, *from._impl_.payload_.unregister_user_);
        } else {
          _this->_impl_.payload_.unregister_user_->MergeFrom(from._internal_unregister_user());
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Request::IsInitialized() const {
  return true;
}

void Request::InternalSwap(Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.operation_, other->_impl_.operation_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_chat_2eproto_getter,
                                   &descriptor_table_chat_2eproto_once,
                                   file_level_metadata_chat_2eproto[7]);
}
// ===================================================================

class Response::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::chat::Response, _impl_._oneof_case_);
};

void Response::set_allocated_user_list(::chat::UserListResponse* user_list) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_result();
  if (user_list) {
    ::google::protobuf::Arena* submessage_arena = user_list->GetArena();
    if (message_arena != submessage_arena) {
      user_list = ::google::protobuf::internal::GetOwnedMessage(message_arena, user_list, submessage_arena);
    }
    set_has_user_list();
    _impl_.result_.user_list_ = user_list;
  }
  // @@protoc_insertion_point(field_set_allocated:chat.Response.user_list)
}
void Response::set_allocated_incoming_message(::chat::IncomingMessageResponse* incoming_message) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_result();
  if (incoming_message) {
    ::google::protobuf::Arena* submessage_arena = incoming_message->GetArena();
    if (message_arena != submessage_arena) {
      incoming_message = ::google::protobuf::internal::GetOwnedMessage(message_arena, incoming_message, submessage_arena);
    }
    set_has_incoming_message();
    _impl_.result_.incoming_message_ = incoming_message;
  }
  // @@protoc_insertion_point(field_set_allocated:chat.Response.incoming_message)
}
Response::Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chat.Response)
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        result_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Response::Response(
    ::google::protobuf::Arena* arena,
    const Response& from)
    : ::google::protobuf::Message(arena) {
  Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, operation_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, operation_),
           offsetof(Impl_, status_code_) -
               offsetof(Impl_, operation_) +
               sizeof(Impl_::status_code_));
  switch (result_case()) {
    case RESULT_NOT_SET:
      break;
      case kUserList:
        _impl_.result_.user_list_ = ::google::protobuf::Message::CopyConstruct<::chat::UserListResponse>(arena, *from._impl_.result_.user_list_);
        break;
      case kIncomingMessage:
        _impl_.result_.incoming_message_ = ::google::protobuf::Message::CopyConstruct<::chat::IncomingMessageResponse>(arena, *from._impl_.result_.incoming_message_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:chat.Response)
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        result_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, operation_),
           0,
           offsetof(Impl_, status_code_) -
               offsetof(Impl_, operation_) +
               sizeof(Impl_::status_code_));
}
Response::~Response() {
  // @@protoc_insertion_point(destructor:chat.Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  if (has_result()) {
    clear_result();
  }
  _impl_.~Impl_();
}

void Response::clear_result() {
// @@protoc_insertion_point(one_of_clear_start:chat.Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (result_case()) {
    case kUserList: {
      if (GetArena() == nullptr) {
        delete _impl_.result_.user_list_;
      }
      break;
    }
    case kIncomingMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.result_.incoming_message_;
      }
      break;
    }
    case RESULT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
Response::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Response, _impl_._cached_size_),
              false,
          },
          &Response::MergeImpl,
          &Response::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.operation_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_code_) -
      reinterpret_cast<char*>(&_impl_.operation_)) + sizeof(_impl_.status_code_));
  clear_result();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 2, 29, 2> Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chat::Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .chat.Operation operation = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Response, _impl_.operation_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.operation_)}},
    // .chat.StatusCode status_code = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Response, _impl_.status_code_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.status_code_)}},
    // string message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .chat.Operation operation = 1;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.operation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .chat.StatusCode status_code = 2;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.status_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string message = 3;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .chat.UserListResponse user_list = 4;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.result_.user_list_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .chat.IncomingMessageResponse incoming_message = 5;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.result_.incoming_message_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chat::UserListResponse>()},
    {::_pbi::TcParser::GetTable<::chat::IncomingMessageResponse>()},
  }}, {{
    "\15\0\0\7\0\0\0\0"
    "chat.Response"
    "message"
  }},
};

::uint8_t* Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chat.Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .chat.Operation operation = 1;
  if (this->_internal_operation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_operation(), target);
  }

  // .chat.StatusCode status_code = 2;
  if (this->_internal_status_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_status_code(), target);
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chat.Response.message");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  switch (result_case()) {
    case kUserList: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *_impl_.result_.user_list_, _impl_.result_.user_list_->GetCachedSize(), target, stream);
      break;
    }
    case kIncomingMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *_impl_.result_.incoming_message_, _impl_.result_.incoming_message_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.Response)
  return target;
}

::size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // .chat.Operation operation = 1;
  if (this->_internal_operation() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_operation());
  }

  // .chat.StatusCode status_code = 2;
  if (this->_internal_status_code() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status_code());
  }

  switch (result_case()) {
    // .chat.UserListResponse user_list = 4;
    case kUserList: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.result_.user_list_);
      break;
    }
    // .chat.IncomingMessageResponse incoming_message = 5;
    case kIncomingMessage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.result_.incoming_message_);
      break;
    }
    case RESULT_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Response*>(&to_msg);
  auto& from = static_cast<const Response&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:chat.Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_operation() != 0) {
    _this->_impl_.operation_ = from._impl_.operation_;
  }
  if (from._internal_status_code() != 0) {
    _this->_impl_.status_code_ = from._impl_.status_code_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_result();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kUserList: {
        if (oneof_needs_init) {
          _this->_impl_.result_.user_list_ =
              ::google::protobuf::Message::CopyConstruct<::chat::UserListResponse>(arena, *from._impl_.result_.user_list_);
        } else {
          _this->_impl_.result_.user_list_->MergeFrom(from._internal_user_list());
        }
        break;
      }
      case kIncomingMessage: {
        if (oneof_needs_init) {
          _this->_impl_.result_.incoming_message_ =
              ::google::protobuf::Message::CopyConstruct<::chat::IncomingMessageResponse>(arena, *from._impl_.result_.incoming_message_);
        } else {
          _this->_impl_.result_.incoming_message_->MergeFrom(from._internal_incoming_message());
        }
        break;
      }
      case RESULT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Response::IsInitialized() const {
  return true;
}

void Response::InternalSwap(Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Response, _impl_.status_code_)
      + sizeof(Response::_impl_.status_code_)
      - PROTOBUF_FIELD_OFFSET(Response, _impl_.operation_)>(
          reinterpret_cast<char*>(&_impl_.operation_),
          reinterpret_cast<char*>(&other->_impl_.operation_));
  swap(_impl_.result_, other->_impl_.result_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_chat_2eproto_getter,
                                   &descriptor_table_chat_2eproto_once,
                                   file_level_metadata_chat_2eproto[8]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace chat
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_chat_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
